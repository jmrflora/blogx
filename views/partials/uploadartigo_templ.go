// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.648
package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Uploadartigo() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form hx-encoding=\"multipart/form-data\" hx-post=\"/upload\" _=\"on htmx:xhr:progress(loaded, total) set #progress.value to (loaded/total)*100\"><!-- ArtigoRegistroDTO fields -->Titulo: <input type=\"text\" name=\"Titulo\"><br>Subtitulo: <input type=\"text\" name=\"Subtitulo\"><br>IdAutor: <input type=\"number\" name=\"IdAutor\"><br><!-- BlogRegistroDTO specific field --><!-- Since CategoriasIds is a slice of integers, you can use multiple input fields with the same name -->CategoriasIds: <input type=\"number\" name=\"CategoriasIds\"><br>CategoriasIds: <input type=\"number\" name=\"CategoriasIds\"><br><input type=\"file\" name=\"file\"> <button>Upload</button> <progress id=\"progress\" value=\"0\" max=\"100\"></progress></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
